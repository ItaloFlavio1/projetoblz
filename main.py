# -*- coding: utf-8 -*-
"""
Sistema de Controle de Testes - Vers√£o Online

Este script √© o ponto de entrada para a aplica√ß√£o em um ambiente de produ√ß√£o.
Ele inicializa o banco de dados, cria um usu√°rio administrador padr√£o (se n√£o existir)
e inicia o servidor Flask otimizado para implanta√ß√£o em servi√ßos de nuvem.
"""
import os
import sys
import threading
from datetime import datetime, date, timezone, timedelta

# Adiciona o diret√≥rio atual ao path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def get_brasil_datetime():
    """Retorna o datetime atual no fuso hor√°rio de S√£o Paulo (UTC-3).

    Returns:
        datetime: O objeto datetime com o fuso hor√°rio de S√£o Paulo.
    """
    brasil_tz = timezone(timedelta(hours=-3))
    return datetime.now(brasil_tz)

def main():
    """Fun√ß√£o principal para produ√ß√£o.

    Esta fun√ß√£o realiza as seguintes etapas:
    1. Importa as depend√™ncias necess√°rias da aplica√ß√£o principal.
    2. Inicializa o banco de dados, criando as tabelas se n√£o existirem.
    3. Cria um usu√°rio 'admin' padr√£o se nenhum usu√°rio com esse nome existir.
    4. Configura o host e a porta para o servidor, priorizando vari√°veis de ambiente.
    5. Inicia o servidor Flask em modo de produ√ß√£o (sem debug).
    """
    from app import app, db, User, safe_commit

    print("=" * 50)
    print("üöÄ SISTEMA CONTROLE TESTES - INICIANDO")
    print("=" * 50)

    # Inicializa banco de dados
    with app.app_context():
        db.create_all()
        if not User.query.filter_by(username="admin").first():
            admin_user = User(username="admin", role="admin")
            admin_user.set_password("admin")
            db.session.add(admin_user)
            safe_commit()
            print("‚úÖ Usu√°rio admin criado (admin/admin)")

    # Configura√ß√µes para produ√ß√£o
    port = int(os.environ.get('PORT', 5000))
    host = '0.0.0.0'  # Importante para servi√ßos cloud

    print(f"üåê Servidor iniciando...")
    print(f"üìç Acesse: http://seu-dominio.onrender.com")
    print("-" * 50)

    # Inicia servidor
    app.run(
        host=host,
        port=port,
        debug=False,
        threaded=True
    )

if __name__ == "__main__":
    main()
